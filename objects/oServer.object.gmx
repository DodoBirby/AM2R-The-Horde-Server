<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>strict_init("dictionary.json");
canChange = true;
var type, port, maxClients;
type = network_socket_tcp;
port = 64198;
maxClients = 8;
server = network_create_server(type, port, maxClients);

var size, type, alignment;
size = 1024;
type = buffer_grow;
alignment = 1;
buffer = buffer_create(size, type, alignment);

socketList = ds_list_create();
ipList = ds_list_create();

vars = ds_grid_create(3, 33);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canChange = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var type_event = ds_map_find_value(async_load, "type");

switch(type_event){
    case network_type_connect:
        var socket = ds_map_find_value(async_load, "socket");
        var findsocket = ds_list_find_index(socketList, socket);
        ds_list_add(socketList, socket); 
        show_debug_message("Client connected");
        break;
    case network_type_disconnect:
        var socket = ds_map_find_value(async_load, "socket");
        var findsocket = ds_list_find_index(socketList, socket);
        
        if(findsocket &gt;= 0){
            ds_list_delete(socketList, findsocket);
            show_debug_message("Client disconnected");
        }
        break;
    case network_type_data:
        var _buffer = ds_map_find_value(async_load, "buffer");
        var socket = ds_map_find_value(async_load, "id");
        buffer_seek(_buffer, buffer_seek_start, 0);
        ds_grid_read(vars, strict_decompress(buffer_read(_buffer, buffer_string)));
        if(canChange){
            for(var i=0; i&lt;ds_grid_height(vars); i++){
                if(vars[# 0, i] != vars[# 1, i]){
                    canChange = false;
                    ds_grid_set(vars, 0, i, vars[# 1, i]);
                }
            }
            if(!canChange){
                buffer_delete(buffer);
                var size, type, alignment;
                size = 1024;
                type = buffer_grow;
                alignment = 1;
                buffer = buffer_create(size, type, alignment);
                buffer_seek(buffer, buffer_seek_start, 0);
                buffer_seek(buffer, buffer_seek_start, 0);
                buffer_write(buffer, buffer_string, strict_compress(ds_grid_write(vars)));
                var sockets = ds_list_size(socketList);
                for(var i=0; i&lt;sockets; i++){
                    network_send_packet(socketList[| i], buffer, buffer_tell(buffer))
                }
                canChange = true;
            }
        }
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>network_destroy(server);
buffer_delete(buffer);
ds_list_destroy(socketList);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var str;
if(server &gt;= 0){
    str = "Running";
} else {
    str = "Not running";
}


draw_set_font(font0);
draw_text(5, 5, "AM2R Server: " + string(str));
draw_text(5, 20, "Connected Clients: " + string(ds_list_size(socketList)));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
